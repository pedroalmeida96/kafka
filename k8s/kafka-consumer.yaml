apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-consumer
  labels:
    app: kafka-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-consumer
  template:
    metadata:
      labels:
        app: kafka-consumer
    spec:
      containers:
        - image: kafka-consumer:latest
          name: kafka-consumer
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mariadb://mariadb/mariadb
            - name: SPRING_DATASOURCE_USERNAME
              value: root
            - name: SPRING_DATASOURCE_PASSWORD
              value: root
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS
              value: kafka:29092
            - name: SPRING_KAFKA_CONSUMER_GROUP_ID
              value: mygroup
            - name: SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET
              value: earliest
            - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
              value: org.apache.kafka.common.serialization.StringDeserializer
            - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
              value: io.confluent.kafka.serializers.KafkaAvroDeserializer
            - name: SPRING_KAFKA_CONSUMER_PROPERTIES_SCHEMA_REGISTRY_URL
              value: "http://schemaregistry:8085"
            - name: SPRING_KAFKA_CONSUMER_PROPERTIES_SPECIFIC_AVRO_READER
              value: "true"
            - name: SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES
              value: "*"

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-consumer
spec:
  type: NodePort
  selector:
    app: kafka-consumer
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30181
